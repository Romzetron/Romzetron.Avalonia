<ResourceDictionary
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Romzetron.Avalonia.Controls">

    <!--==================================================-->
    <!-- Design preview. -->
    <!--==================================================-->

    <Design.PreviewWith>

        <Border Padding="20">

            <Grid ColumnDefinitions="Auto,400">

                <StackPanel
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Spacing="10"
                    Margin="20">

                    <controls:CircularProgress
                        x:Name="Progress"
                        StrokeThickness="8"
                        IsIndeterminate="False"
                        Width="100"
                        Height="100"
                        Value="63" />

                    <Slider
                        Value="{Binding #Progress.Value, Mode=TwoWay}"
                        Maximum="{Binding #Progress.Maximum}"
                        Minimum="{Binding #Progress.Minimum}" />

                    <CheckBox
                        IsChecked="{Binding #Progress.ShowProgressText, Mode=TwoWay}"
                        Content="Show Progress Text" />

                    <CheckBox
                        IsChecked="{Binding #Progress.IsIndeterminate, Mode=TwoWay}"
                        Content="Indeterminate" />

                </StackPanel>

                <ItemsControl
                    ItemsSource="{x:Static Theme.Colors}"
                    Grid.Column="1"
                    Margin="10,0,0,0">

                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>

                    <ItemsControl.ItemTemplate>

                        <DataTemplate DataType="ColorTheme">

                            <controls:CircularProgress
                                Theme.ColorTheme="{Binding}"
                                IsIndeterminate="{Binding #Progress.IsIndeterminate, Mode=OneWay}"
                                ShowProgressText="{Binding #Progress.ShowProgressText, Mode=OneWay}"
                                Value="{Binding #Progress.Value, Mode=OneWay}"
                                Minimum="{Binding #Progress.Minimum, Mode=OneWay}"
                                Maximum="{Binding #Progress.Maximum, Mode=OneWay}"
                                Content="{Binding}"
                                Margin="10" />

                        </DataTemplate>

                    </ItemsControl.ItemTemplate>

                </ItemsControl>

            </Grid>

        </Border>

    </Design.PreviewWith>

    <!--==================================================-->
    <!-- CircularProgress control theme. -->
    <!--==================================================-->

    <ControlTheme x:Key="{x:Type controls:CircularProgress}" TargetType="controls:CircularProgress">

        <!--==================================================-->
        <!-- Default property setters. -->
        <!--==================================================-->

        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{DynamicResource CircularProgressBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource CircularProgressForeground}" />
        <Setter Property="Stroke" Value="{DynamicResource CircularProgressStrokeColor}" />
        <Setter Property="StrokeThickness" Value="{DynamicResource CircularProgressStrokeThickness}" />
        <Setter Property="Height" Value="100" />
        <Setter Property="Width" Value="100" />

        <!--==================================================-->
        <!-- Template. -->
        <!--==================================================-->

        <Setter Property="Template">

            <!--==================================================-->
            <!-- Control template. -->
            <!--==================================================-->

            <ControlTemplate>

                <!--==================================================-->
                <!-- Stacking grid. -->
                <!--==================================================-->

                <Grid>

                    <!--==================================================-->
                    <!-- Layout container. -->
                    <!--==================================================-->

                    <LayoutTransformControl
                        x:Name="PART_LayoutTransformControl"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center">

                        <!--==================================================-->
                        <!-- Content container. -->
                        <!--==================================================-->

                        <StackPanel>

                            <!--==================================================-->
                            <!-- Content. -->
                            <!--==================================================-->

                            <ContentPresenter
                                Background="Transparent"
                                Content="{TemplateBinding ContentControl.Content}"
                                HorizontalAlignment="Center" />

                            <!--==================================================-->
                            <!-- Percent text. -->
                            <!--==================================================-->

                            <TextBlock
                                x:Name="Percent"
                                Foreground="{TemplateBinding Foreground}"
                                HorizontalAlignment="Center"
                                IsVisible="{TemplateBinding ShowProgressText}">

                                <TextBlock.Text>

                                    <MultiBinding Converter="{StaticResource StringFormatConverter}">
                                        <TemplateBinding Property="ProgressTextFormat" />
                                        <Binding Path="Value" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <TemplateBinding Property="Percentage" />
                                        <TemplateBinding Property="Minimum" />
                                        <TemplateBinding Property="Maximum" />
                                    </MultiBinding>

                                </TextBlock.Text>

                            </TextBlock>

                        </StackPanel>

                    </LayoutTransformControl>

                    <!--==================================================-->
                    <!-- Arc container. -->
                    <!--==================================================-->

                    <Grid x:Name="Arc">

                        <!--==================================================-->
                        <!-- Indeterminate animation style. -->
                        <!--==================================================-->

                        <Grid.Styles>
                            <Style Selector="controls|CircularProgress[IsIndeterminate=True] /template/ Grid#Arc">
                                <Style.Animations>
                                    <Animation Duration="{Binding RotationDuration, RelativeSource={RelativeSource TemplatedParent}}" IterationCount="INFINITE">
                                        <KeyFrame Cue="0%">
                                            <Setter Property="RotateTransform.Angle" Value="0" />
                                        </KeyFrame>
                                        <KeyFrame Cue="100%">
                                            <Setter Property="RotateTransform.Angle" Value="360" />
                                        </KeyFrame>
                                    </Animation>
                                </Style.Animations>
                            </Style>
                        </Grid.Styles>

                        <!--==================================================-->
                        <!-- Background arc. -->
                        <!--==================================================-->

                        <Arc
                            Stroke="{TemplateBinding Background}"
                            StrokeThickness="{TemplateBinding Converter={x:Static controls:CircularProgress.GetStrokeBorderThickness}}"
                            StartAngle="-90"
                            SweepAngle="360"
                            StrokeJoin="Bevel"
                            StrokeLineCap="{Binding StrokeLineCap, RelativeSource={RelativeSource TemplatedParent}}" />

                        <!--==================================================-->
                        <!-- Percent arc. -->
                        <!--==================================================-->

                        <Arc
                            x:Name="Stroke"
                            Stroke="{TemplateBinding Stroke}"
                            StrokeThickness="{TemplateBinding Converter={x:Static controls:CircularProgress.GetStrokeBorderThickness}}"
                            StartAngle="-90"
                            SweepAngle="{Binding SweepAngle, RelativeSource={RelativeSource TemplatedParent}}"
                            StrokeJoin="Bevel"
                            StrokeLineCap="{Binding StrokeLineCap, RelativeSource={RelativeSource TemplatedParent}}" />

                    </Grid>

                </Grid>

            </ControlTemplate>

        </Setter>

        <!--==================================================-->
        <!-- Red theme. -->
        <!--==================================================-->

        <Style Selector="^[(Theme.ColorTheme)=Red]">
            <Setter Property="Stroke" Value="{DynamicResource RedBrush06}" />
        </Style>

        <!--==================================================-->
        <!-- Pink theme. -->
        <!--==================================================-->

        <Style Selector="^[(Theme.ColorTheme)=Pink]">
            <Setter Property="Stroke" Value="{DynamicResource PinkBrush06}" />
        </Style>

        <!--==================================================-->
        <!-- Purple theme. -->
        <!--==================================================-->

        <Style Selector="^[(Theme.ColorTheme)=Purple]">
            <Setter Property="Stroke" Value="{DynamicResource PurpleBrush06}" />
        </Style>

        <!--==================================================-->
        <!-- Deep purple theme. -->
        <!--==================================================-->

        <Style Selector="^[(Theme.ColorTheme)=DeepPurple]">
            <Setter Property="Stroke" Value="{DynamicResource DeepPurpleBrush06}" />
        </Style>

        <!--==================================================-->
        <!-- Indigo theme. -->
        <!--==================================================-->

        <Style Selector="^[(Theme.ColorTheme)=Indigo]">
            <Setter Property="Stroke" Value="{DynamicResource IndigoBrush06}" />
        </Style>

        <!--==================================================-->
        <!-- Blue theme. -->
        <!--==================================================-->

        <Style Selector="^[(Theme.ColorTheme)=Blue]">
            <Setter Property="Stroke" Value="{DynamicResource BlueBrush06}" />
        </Style>

        <!--==================================================-->
        <!-- Teal theme. -->
        <!--==================================================-->

        <Style Selector="^[(Theme.ColorTheme)=Teal]">
            <Setter Property="Stroke" Value="{DynamicResource TealBrush06}" />
        </Style>

        <!--==================================================-->
        <!-- Green theme. -->
        <!--==================================================-->

        <Style Selector="^[(Theme.ColorTheme)=Green]">
            <Setter Property="Stroke" Value="{DynamicResource GreenBrush06}" />
        </Style>

        <!--==================================================-->
        <!-- Amber theme. -->
        <!--==================================================-->

        <Style Selector="^[(Theme.ColorTheme)=Amber]">
            <Setter Property="Stroke" Value="{DynamicResource AmberBrush06}" />
        </Style>

        <!--==================================================-->
        <!-- Orange theme. -->
        <!--==================================================-->

        <Style Selector="^[(Theme.ColorTheme)=Orange]">
            <Setter Property="Stroke" Value="{DynamicResource OrangeBrush06}" />
        </Style>

        <!--==================================================-->
        <!-- DeepOrange theme. -->
        <!--==================================================-->

        <Style Selector="^[(Theme.ColorTheme)=DeepOrange]">
            <Setter Property="Stroke" Value="{DynamicResource DeepOrangeBrush06}" />
        </Style>

        <!--==================================================-->
        <!-- Brown theme. -->
        <!--==================================================-->

        <Style Selector="^[(Theme.ColorTheme)=Brown]">
            <Setter Property="Stroke" Value="{DynamicResource BrownBrush06}" />
        </Style>

        <!--==================================================-->
        <!-- BlueGrey theme. -->
        <!--==================================================-->

        <Style Selector="^[(Theme.ColorTheme)=BlueGrey]">
            <Setter Property="Stroke" Value="{DynamicResource BlueGreyBrush06}" />
        </Style>

    </ControlTheme>

</ResourceDictionary>